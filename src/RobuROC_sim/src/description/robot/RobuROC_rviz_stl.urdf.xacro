<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"  name="RobuROC">

    <!-- This is RobuROC model for rviz visualisation -->
    <!-- Model visualisation is made of stl files and collison is made of simple shapes box and cylinders-->
    <!-- All parameters of robot are stated here: -->

    <xacro:property name="box_y" value="0.54" />
    <xacro:property name="box_x" value="0.925" />
    <xacro:property name="box_z" value="0.304" />
    <xacro:property name="box_m" value="100" />
    <xacro:property name="box_off_z" value="0.484" />
    <xacro:property name="cyl_l" value="0.1" />
    <xacro:property name="cyl_r" value="0.28" />
    <xacro:property name="cyl_m" value="10" />
    <xacro:property name="cyl_off_x" value="0.3068" />
    <xacro:property name="cyl_off_y" value="0.3425" />
    <xacro:property name="cyl_off_z" value="-0.204" />
    <xacro:property name="rot_90" value="${pi/2}" />
    <xacro:property name="max_vel" value="2" />
    <xacro:property name="scale_factor" value="0.001" />
    <xacro:property name="scale" value="${scale_factor} ${scale_factor} ${scale_factor}" />


    <!-- This will include inertia and color functions -->
    <xacro:include filename="include_RobuROC.xacro" />
    <!-- <xacro:include filename="../camera/_d435.urdf.xacro"/> -->

    <!-- Initial link is empty link called world -->
    <link name="world"></link>

    <!-- Chassis joint has been off seted in z axis and set to fixed-->
    <joint name="chassis_joint" type="fixed">
        <origin xyz="0 0 ${box_off_z}" rpy="0 0 0"/>
        <parent link="world"/>
        <child link="chassis_link"/>        
    </joint>

    <!-- ##############################################  -->
    <!--                Chassis Link                     -->
    <!-- ##############################################  -->

    <link name="chassis_link">
        <visual>
            <origin xyz="0 0 0" rpy="${rot_90} 0 ${rot_90}"/>
            <geometry>
                <mesh filename="file://$(find RobuROC_sim)/meshes/chassis.STL" scale = "${scale}"/>
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <origin xyz="0 0 ${box_z}" rpy="0 0 0"/>
            <geometry>
                <box size="${box_x} ${box_y} ${box_z}" />
            </geometry>
        </collision>
       <xacro:inertial_box mass="${box_m}" x="${box_x}" y="${box_y}" z="${box_z}">
            <origin xyz="0.0 0 ${box_off_z-box_z/2}" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>


    <!-- All wheels has been modeled as continous joints -->

    <!-- ##############################################  -->
    <!--                WHEEL 1  +x +y                   -->
    <!-- ##############################################  -->

    <joint name="wheel_1_joint" type="continuous">
        <origin xyz="${cyl_off_x} ${cyl_off_y} ${cyl_off_z}" rpy="${rot_90} 0 0"/>
        <parent link="chassis_link"/>
        <child link="wheel_1_link"/>        
        <axis xyz="0 0 1" />
        <limit effort="1000" velocity="${max_vel}"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <link name="wheel_1_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 ${rot_90} 0"/>
            <geometry>
                <mesh filename="file://$(find RobuROC_sim)/meshes/wheel.STL" scale="${scale}"/>
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${cyl_l}" radius="${cyl_r}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${cyl_m}" length="${cyl_l}" radius="${cyl_r}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>
    <!-- ##############################################  -->
    <!--                   WHEEL 2  +x -y                -->
    <!-- ##############################################  -->
    <joint name="wheel_2_joint" type="continuous">
        <origin xyz="${cyl_off_x} ${-cyl_off_y} ${cyl_off_z}" rpy="${rot_90} 0 0"/>
        <parent link="chassis_link"/>
        <child link="wheel_2_link"/>     
        <axis xyz="0 0 1" />   
        <limit effort="1000" velocity="${max_vel}"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <link name="wheel_2_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 ${rot_90} 0"/>
            <geometry>
                <mesh filename="file://$(find RobuROC_sim)/meshes/wheel.STL" scale="${scale}"/>
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${cyl_l}" radius="${cyl_r}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${cyl_m}" length="${cyl_l}" radius="${cyl_r}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <!-- ##############################################  -->
    <!--                    WHEEL 3  -x -y               -->
    <!-- ##############################################  -->
    <joint name="wheel_3_joint" type="continuous">
        <origin xyz="${-cyl_off_x} ${-cyl_off_y} ${cyl_off_z}" rpy="${rot_90} 0 0"/>
        <parent link="chassis_link"/>
        <child link="wheel_3_link"/>  
        <axis xyz="0 0 1" />      
        <limit effort="1000" velocity="${max_vel}"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <link name="wheel_3_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 ${rot_90} 0"/>
            <geometry>
                <mesh filename="file://$(find RobuROC_sim)/meshes/wheel.STL" scale="${scale}"/>
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${cyl_l}" radius="${cyl_r}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${cyl_m}" length="${cyl_l}" radius="${cyl_r}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <!-- ##############################################  -->
    <!--                    WHEEL 4  -x +y               -->
    <!-- ##############################################  -->
    <joint name="wheel_4_joint" type="continuous">
        <origin xyz="${-cyl_off_x} ${cyl_off_y} ${cyl_off_z}" rpy="${rot_90} 0 0"/>
        <parent link="chassis_link"/>
        <child link="wheel_4_link"/>        
        <axis xyz="0 0 1" />
        <limit effort="1000" velocity="${max_vel}"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <link name="wheel_4_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 ${rot_90} 0"/>
            <geometry>
                <mesh filename="file://$(find RobuROC_sim)/meshes/wheel.STL" scale="${scale}"/>
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${cyl_l}" radius="${cyl_r}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${cyl_m}" length="${cyl_l}" radius="${cyl_r}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <!-- ##############################################  -->
    <!--                  RGB-D Camera                   -->
    <!-- ##############################################  -->
    <!-- <xacro:sensor_d435 name="camera_1" topics_ns="camera_1" parent = "chassis_joint" publish_pointcloud="true">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:sensor_d435> -->

    <!-- Include gazebo model -->
    <xacro:include filename="RobuROC_gazebo_sim.xacro" />


</robot>